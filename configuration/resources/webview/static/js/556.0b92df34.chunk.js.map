{"version":3,"file":"static/js/556.0b92df34.chunk.js","mappings":"mPAGO,MCCDA,GAAYC,EAAAA,EAAAA,GAAW,CAC3BC,KAAM,CACJC,SAAU,QACVC,MAAO,OACPC,OAAQ,OACRC,IAAK,IACLC,KAAM,IACNC,WAAY,QAEdC,IAAK,CACHL,MAAO,OACPC,OAAQ,OACRG,WACE,oFAKAE,EAAY,CAChBC,MACE,2EACFC,MAAO,WACPC,MAAO,gCACPC,MAAO,OAGHC,EAAiBA,CAACC,EAAMC,EAASC,KACrC,OAAQF,GACN,KAAKN,EAAUC,MACb,OACEQ,EAAAA,EAAAA,KAAA,OACEC,MAAO,CAAEC,gBAAkB,ODhCZC,ECgC2BJ,ED9BvC,qBADDI,EAEOC,GAEAJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,QC4BTC,UAAWR,EAAQR,MAGzB,KAAKC,EAAUE,MACb,OACEO,EAAAA,EAAAA,KAAA,SAAOO,IAAKR,EAAIS,UACdR,EAAAA,EAAAA,KAAA,SACES,SAAO,EACPC,KAAK,WACLC,QAAQ,KACRJ,IAAI,kCAIZ,KAAKhB,EAAUG,MACb,OACEM,EAAAA,EAAAA,KAAA,SAAOO,IAAKR,EAAIS,UACdR,EAAAA,EAAAA,KAAA,SACES,SAAO,EACPC,KAAK,WACLC,QAAQ,KACRJ,IAAI,iCAIZ,KAAKhB,EAAUI,MACb,OAAOK,EAAAA,EAAAA,KAAA,OAAKO,IAAKR,EAAKa,IAAI,GAAGN,UAAWR,EAAQR,MAClD,QACE,OD7DmBa,KC8DvB,EAUa,SAASU,IACtB,MAAMf,EAAUjB,IAGVsB,EADM,IAAIW,IAAIC,OAAOC,SAASC,MACfC,aAAaC,IAAI,OAChCC,EAZgB,WAAe,IAAdrB,EAAGsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7B,MAAMD,EAAkBI,OAAOC,OAAOlC,GAAWmC,MAAMC,GACrDA,EAAQC,KAAK7B,KAEf,OAA0B,MAAnBqB,EAA0BA,EAAkB7B,EAAUC,KAC/D,CAO0BqC,CAAgB1B,GAExC,OACEH,EAAAA,EAAAA,KAAA,OAAKM,UAAWR,EAAQf,KAAKyB,SAC1BZ,EAAewB,EAAiBtB,EAASK,IAGhD,C","sources":["client/pages/multi-media/components/ImageGetter.js","client/pages/multi-media/MultiMediaPage.jsx"],"sourcesContent":["\nimport WebRecorderGif from '../../../../assets/img/web-recorder.gif';\n\nexport const getImage = (mediaUrl) => {\n    switch (mediaUrl) {\n        case 'web-recorder.gif':\n            return WebRecorderGif;\n        default:\n            return <></>\n    }\n\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { getImage } from \"./components/ImageGetter\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    width: \"100%\",\n    height: \"100%\",\n    top: \"0\",\n    left: \"0\",\n    background: \"#fff\",\n  },\n  img: {\n    width: \"100%\",\n    height: \"100%\",\n    background:\n      \"url(../../../assets/img/quick-record-web.gifz) center center/contain no-repeat\",\n  },\n});\n\n// https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types\nconst MediaType = {\n  Image:\n    /\\.(png|apng|gif|svg|webp|tif|tiff|bmp|ico|cur|avif|jpg|jpeg|jfif|pjpeg)/i,\n  Audio: /\\.(mp3)/i,\n  Video: /\\.(mp4|webm|ogv|ogm|ogg|avi)/i,\n  Embed: /.*/i,\n};\n\nconst mediaRenderers = (type, classes, url) => {\n  switch (type) {\n    case MediaType.Image:\n      return (\n        <div\n          style={{ backgroundImage: `url(${getImage(url)})` }}\n          className={classes.img}\n        />\n      );\n    case MediaType.Audio:\n      return (\n        <audio src={url}>\n          <track\n            default\n            kind=\"captions\"\n            srcLang=\"en\"\n            src=\"/media/examples/friday.vttz\"\n          />\n        </audio>\n      );\n    case MediaType.Video:\n      return (\n        <video src={url}>\n          <track\n            default\n            kind=\"captions\"\n            srcLang=\"en\"\n            src=\"/media/examples/friday.vtt\"\n          />\n        </video>\n      );\n    case MediaType.Embed:\n      return <img src={url} alt=\"\" className={classes.img} />;\n    default:\n      return;\n  }\n};\n\nconst detectMediaType = (url = \"\") => {\n  const detectedPattern = Object.values(MediaType).find((pattern) =>\n    pattern.test(url)\n  );\n  return detectedPattern != null ? detectedPattern : MediaType.Image;\n};\n\nexport default function MultiMediaPage() {\n  const classes = useStyles();\n\n  const url = new URL(window.location.href);\n  const mediaUrl = url.searchParams.get(\"url\");\n  const detectedPattern = detectMediaType(mediaUrl);\n\n  return (\n    <div className={classes.root}>\n      {mediaRenderers(detectedPattern, classes, mediaUrl)}\n    </div>\n  );\n}\n"],"names":["useStyles","makeStyles","root","position","width","height","top","left","background","img","MediaType","Image","Audio","Video","Embed","mediaRenderers","type","classes","url","_jsx","style","backgroundImage","mediaUrl","WebRecorderGif","_Fragment","className","src","children","default","kind","srcLang","alt","MultiMediaPage","URL","window","location","href","searchParams","get","detectedPattern","arguments","length","undefined","Object","values","find","pattern","test","detectMediaType"],"sourceRoot":""}